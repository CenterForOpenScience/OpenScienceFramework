{"version":3,"sources":["webpack:///../website/static/js/pages/registration-retraction-page.js","webpack:///../website/static/js/changeMessage.js?aced***","webpack:///../website/static/js/registrationRetraction.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,uC;AACA;AACA,CAAC;;AAED;;;;;;;;ACrCA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,6C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"registration-retraction-page.js","sourcesContent":["/**\n * registration retraction ES\n**/\n\nvar RegistrationRetraction = require('js/registrationRetraction');\n\nvar submitUrl = window.contextVars.node.urls.api + 'retraction/';\n\nvar registrationTitle = window.contextVars.node.title;\n\nnew RegistrationRetraction.RegistrationRetraction('#registrationRetraction', submitUrl, registrationTitle);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../website/static/js/pages/registration-retraction-page.js\n ** module id = 0\n ** module chunks = 40\n **/","/**\n * ViewModel mixin for displaying form input help messages.\n * Adds message and messageClass observables that can be changed with the\n * changeMessage method.\n */\n'use strict';\nvar ko = require('knockout');\nvar oop = require('js/oop');\n/** Change the flashed status message */\n\nvar ChangeMessageMixin = oop.defclass({\n    constructor: function() {\n        this.message = ko.observable('');\n        this.messageClass = ko.observable('text-info');\n    },\n    changeMessage: function(text, css, timeout) {\n        var self = this;\n        if (typeof text === 'function') {\n            text = text();\n        }\n        self.message(text);\n        var cssClass = css || 'text-info';\n        self.messageClass(cssClass);\n        if (timeout) {\n            // Reset message after timeout period\n            window.setTimeout(function () {\n                self.message('');\n                self.messageClass('text-info');\n            }, timeout);\n        }\n    },\n    resetMessage: function() {\n        this.message('');\n        this.messageClass('text-info');        \n    }\n});\n\nmodule.exports = ChangeMessageMixin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../website/static/js/changeMessage.js\n ** module id = 379\n ** module chunks = 30 33 34 38 40 47 49\n **/","/**\n * On page load, maintains knockout ViewModel\n**/\n'use strict';\n\nvar $ = require('jquery');\nvar $osf = require('js/osfHelpers');\n\nvar ko = require('knockout');\nvar koHelpers = require('js/koHelpers');\nrequire('knockout.validation');\n\nvar ChangeMessageMixin = require('js/changeMessage');\nvar oop = require('js/oop');\nvar Raven = require('raven-js');\n\n\nvar RegistrationRetractionViewModel = oop.extend(\n    ChangeMessageMixin,\n    {\n        constructor: function(submitUrl, registrationTitle) {\n            this.super.constructor.call(this);\n\n            var self = this;\n\n            self.submitUrl = submitUrl;\n            self.registrationTitle = $osf.htmlDecode(registrationTitle);\n            // Truncate title to around 50 chars\n            var parts = self.registrationTitle.slice(0, 50).split(' ');\n            if (parts.length > 1) {\n                self.truncatedTitle = parts.slice(0, -1).join(' ');\n            }\n            else {\n                self.truncatedTitle = parts[0];\n            }\n\n            self.justification = ko.observable('').extend({\n                maxLength: 2048\n            });\n            self.confirmationText = ko.observable().extend({\n                required: true,\n                mustEqual: self.truncatedTitle\n            });\n            self.disableSave = ko.observable(false);\n            self.valid = ko.computed(function(){\n                return !self.disableSave() && self.confirmationText.isValid();\n            });\n        },\n        SUBMIT_ERROR_MESSAGE: 'Error submitting your retraction request, please try again. If the problem ' +\n                'persists, email <a href=\"mailto:support@osf.iop\">support@osf.io</a>',\n        CONFIRMATION_ERROR_MESSAGE: 'Please enter the registration title before clicking Retract Registration',\n        JUSTIFICATON_ERROR_MESSAGE: 'Your justification is too long, please enter a justification with no more ' +\n            'than 2048 characters long.',\n        MESSAGE_ERROR_CLASS: 'text-danger',\n        onSubmitSuccess: function(response) {            \n            window.location = response.redirectUrl;\n        },\n        onSubmitError: function(xhr, status, errorThrown) {\n            var self = this;\n            self.disableSave(false);\n            self.changeMessage(self.SUBMIT_ERROR_MESSAGE, self.MESSAGE_ERROR_CLASS);\n            Raven.captureMessage('Could not submit registration retraction.', {\n                xhr: xhr,\n                status: status,\n                error: errorThrown\n            });\n        },\n        submit: function() {\n            var self = this;\n            self.disableSave(true);\n            // Show errors if invalid\n            if (!self.confirmationText.isValid()) {\n                self.changeMessage(self.CONFIRMATION_ERROR_MESSAGE, self.MESSAGE_ERROR_CLASS);\n                return false;\n            } else if (!self.justification.isValid()) {\n                self.changeMessage(self.JUSTIFICATON_ERROR_MESSAGE, self.MESSAGE_ERROR_CLASS);\n                return false;\n            } else {\n                // Else Submit\n                return $osf.postJSON(self.submitUrl, ko.toJS(self))\n                    .done(self.onSubmitSuccess.bind(self))\n                    .fail(self.onSubmitError.bind(self));\n            }\n        }\n});\n\nvar RegistrationRetraction = function(selector, submitUrl, registrationTitle) {\n    this.viewModel = new RegistrationRetractionViewModel(submitUrl, registrationTitle);\n    $osf.applyBindings(this.viewModel, selector);\n};\n\nmodule.exports = {\n    RegistrationRetraction: RegistrationRetraction,\n    ViewModel: RegistrationRetractionViewModel\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../website/static/js/registrationRetraction.js\n ** module id = 414\n ** module chunks = 40\n **/"],"sourceRoot":""}