{"version":3,"sources":["webpack:///../website/addons/dataverse/static/user-cfg.js","webpack:///../~/knockout.punches/index.js?2063****","webpack:///../website/static/js/osfLanguage.js?b714*","webpack:///../website/addons/dataverse/static/dataverseUserConfig.js","webpack:///../website/static/js/addonSettings.js"],"names":[],"mappings":";;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mGAAmG;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,sDAAsD;AACtD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;;AAEA,wDAAwD,WAAW;AACnE;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,+BAA+B;AAClE,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,aAAa,gCAAgC;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qBAAqB;AACxD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,YAAY,EAAE;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qDAAqD,EAAE,WAAW;AAClE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2EAA2E,mCAAmC;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2EAA2E,OAAO;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,KAAK;AACL;AACA,KAAK,0BAA0B,oBAAoB;AACnD;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,6FAA6F,OAAO;AACpG;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACrkBA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC;AAChC;AACA,wCAAwC;AACxC,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,oDAAoD,YAAY;AAChE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;AC1NA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA","file":"dataverse/user-cfg.js","sourcesContent":["var $osf = require('js/osfHelpers');\nvar DataverseViewModel = require('./dataverseUserConfig.js').DataverseViewModel;\n\n// Endpoint for Dataverse user settings\nvar url = '/api/v1/settings/dataverse/';\n\nvar dataverseViewModel = new DataverseViewModel(url);\n$osf.applyBindings(dataverseViewModel, '#dataverseAddonScope');\n\n// Load initial Dataverse data\ndataverseViewModel.fetch();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../website/addons/dataverse/static/user-cfg.js\n ** module id = 0\n ** module chunks = 7\n **/","/**\n * @license Knockout.Punches\n * Enhanced binding syntaxes for Knockout 3+\n * (c) Michael Best\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n * Version 0.5.1\n */\nvar ko = require('knockout');\n\n// Add a preprocess function to a binding handler.\nfunction addBindingPreprocessor(bindingKeyOrHandler, preprocessFn) {\n    return chainPreprocessor(getOrCreateHandler(bindingKeyOrHandler), 'preprocess', preprocessFn);\n}\n\n// These utility functions are separated out because they're also used by\n// preprocessBindingProperty\n\n// Get the binding handler or create a new, empty one\nfunction getOrCreateHandler(bindingKeyOrHandler) {\n    return typeof bindingKeyOrHandler === 'object' ? bindingKeyOrHandler :\n        (ko.getBindingHandler(bindingKeyOrHandler) || (ko.bindingHandlers[bindingKeyOrHandler] = {}));\n}\n// Add a preprocess function\nfunction chainPreprocessor(obj, prop, fn) {\n    if (obj[prop]) {\n        // If the handler already has a preprocess function, chain the new\n        // one after the existing one. If the previous function in the chain\n        // returns a falsy value (to remove the binding), the chain ends. This\n        // method allows each function to modify and return the binding value.\n        var previousFn = obj[prop];\n        obj[prop] = function(value, binding, addBinding) {\n            value = previousFn.call(this, value, binding, addBinding);\n            if (value)\n                return fn.call(this, value, binding, addBinding);\n        };\n    } else {\n        obj[prop] = fn;\n    }\n    return obj;\n}\n\n// Add a preprocessNode function to the binding provider. If a\n// function already exists, chain the new one after it. This calls\n// each function in the chain until one modifies the node. This\n// method allows only one function to modify the node.\nfunction addNodePreprocessor(preprocessFn) {\n    var provider = ko.bindingProvider.instance;\n    if (provider.preprocessNode) {\n        var previousPreprocessFn = provider.preprocessNode;\n        provider.preprocessNode = function(node) {\n            var newNodes = previousPreprocessFn.call(this, node);\n            if (!newNodes)\n                newNodes = preprocessFn.call(this, node);\n            return newNodes;\n        };\n    } else {\n        provider.preprocessNode = preprocessFn;\n    }\n}\n\nfunction addBindingHandlerCreator(matchRegex, callbackFn) {\n    var oldGetHandler = ko.getBindingHandler;\n    ko.getBindingHandler = function(bindingKey) {\n        var match;\n        return oldGetHandler(bindingKey) || ((match = bindingKey.match(matchRegex)) && callbackFn(match, bindingKey));\n    };\n}\n\n// Create shortcuts to commonly used ko functions\nvar ko_unwrap = ko.unwrap;\n\n// Create \"punches\" object and export utility functions\nvar ko_punches = ko.punches = {\n    utils: {\n        addBindingPreprocessor: addBindingPreprocessor,\n        addNodePreprocessor: addNodePreprocessor,\n        addBindingHandlerCreator: addBindingHandlerCreator,\n\n        // previous names retained for backwards compitibility\n        setBindingPreprocessor: addBindingPreprocessor,\n        setNodePreprocessor: addNodePreprocessor\n    }\n};\n\nko_punches.enableAll = function () {\n    // Enable interpolation markup\n    enableInterpolationMarkup();\n    enableAttributeInterpolationMarkup();\n\n    // Enable auto-namspacing of attr, css, event, and style\n    enableAutoNamespacedSyntax('attr');\n    enableAutoNamespacedSyntax('css');\n    enableAutoNamespacedSyntax('event');\n    enableAutoNamespacedSyntax('style');\n\n    // Make sure that Knockout knows to bind checked after attr.value (see #40)\n    ko.bindingHandlers.checked.after.push('attr.value');\n\n    // Enable filter syntax for text, html, and attr\n    enableTextFilter('text');\n    enableTextFilter('html');\n    addDefaultNamespacedBindingPreprocessor('attr', filterPreprocessor);\n\n    // Enable wrapped callbacks for click, submit, event, optionsAfterRender, and template options\n    enableWrappedCallback('click');\n    enableWrappedCallback('submit');\n    enableWrappedCallback('optionsAfterRender');\n    addDefaultNamespacedBindingPreprocessor('event', wrappedCallbackPreprocessor);\n    addBindingPropertyPreprocessor('template', 'beforeRemove', wrappedCallbackPreprocessor);\n    addBindingPropertyPreprocessor('template', 'afterAdd', wrappedCallbackPreprocessor);\n    addBindingPropertyPreprocessor('template', 'afterRender', wrappedCallbackPreprocessor);\n};\n// Convert input in the form of `expression | filter1 | filter2:arg1:arg2` to a function call format\n// with filters accessed as ko.filters.filter1, etc.\nfunction filterPreprocessor(input) {\n    // Check if the input contains any | characters; if not, just return\n    if (input.indexOf('|') === -1)\n        return input;\n\n    // Split the input into tokens, in which | and : are individual tokens, quoted strings are ignored, and all tokens are space-trimmed\n    var tokens = input.match(/\"([^\"\\\\]|\\\\.)*\"|'([^'\\\\]|\\\\.)*'|\\|\\||[|:]|[^\\s|:\"'][^|:\"']*[^\\s|:\"']|[^\\s|:\"']/g);\n    if (tokens && tokens.length > 1) {\n        // Append a line so that we don't need a separate code block to deal with the last item\n        tokens.push('|');\n        input = tokens[0];\n        var lastToken, token, inFilters = false, nextIsFilter = false;\n        for (var i = 1, token; token = tokens[i]; ++i) {\n            if (token === '|') {\n                if (inFilters) {\n                    if (lastToken === ':')\n                        input += \"undefined\";\n                    input += ')';\n                }\n                nextIsFilter = true;\n                inFilters = true;\n            } else {\n                if (nextIsFilter) {\n                    input = \"ko.filters['\" + token + \"'](\" + input;\n                } else if (inFilters && token === ':') {\n                    if (lastToken === ':')\n                        input += \"undefined\";\n                    input += \",\";\n                } else {\n                    input += token;\n                }\n                nextIsFilter = false;\n            }\n            lastToken = token;\n        }\n    }\n    return input;\n}\n\n// Set the filter preprocessor for a specific binding\nfunction enableTextFilter(bindingKeyOrHandler) {\n    addBindingPreprocessor(bindingKeyOrHandler, filterPreprocessor);\n}\n\nvar filters = {};\n\n// Convert value to uppercase\nfilters.uppercase = function(value) {\n    return String.prototype.toUpperCase.call(ko_unwrap(value));\n};\n\n// Convert value to lowercase\nfilters.lowercase = function(value) {\n    return String.prototype.toLowerCase.call(ko_unwrap(value));\n};\n\n// Return default value if the input value is empty or null\nfilters['default'] = function (value, defaultValue) {\n    value = ko_unwrap(value);\n    if (typeof value === \"function\") {\n        return value;\n    }\n    if (typeof value === \"string\") {\n        return trim(value) === '' ? defaultValue : value;\n    }\n    return value == null || value.length == 0 ? defaultValue : value;\n};\n\n// Return the value with the search string replaced with the replacement string\nfilters.replace = function(value, search, replace) {\n    return String.prototype.replace.call(ko_unwrap(value), search, replace);\n};\n\nfilters.fit = function(value, length, replacement, trimWhere) {\n    value = ko_unwrap(value);\n    if (length && ('' + value).length > length) {\n        replacement = '' + (replacement || '...');\n        length = length - replacement.length;\n        value = '' + value;\n        switch (trimWhere) {\n            case 'left':\n                return replacement + value.slice(-length);\n            case 'middle':\n                var leftLen = Math.ceil(length / 2);\n                return value.substr(0, leftLen) + replacement + value.slice(leftLen-length);\n            default:\n                return value.substr(0, length) + replacement;\n        }\n    } else {\n        return value;\n    }\n};\n\n// Convert a model object to JSON\nfilters.json = function(rootObject, space, replacer) {     // replacer and space are optional\n    return ko.toJSON(rootObject, replacer, space);\n};\n\n// Format a number using the browser's toLocaleString\nfilters.number = function(value) {\n    return (+ko_unwrap(value)).toLocaleString();\n};\n\n// Export the filters object for general access\nko.filters = filters;\n\n// Export the preprocessor functions\nko_punches.textFilter = {\n    preprocessor: filterPreprocessor,\n    enableForBinding: enableTextFilter\n};\n// Support dynamically-created, namespaced bindings. The binding key syntax is\n// \"namespace.binding\". Within a certain namespace, we can dynamically create the\n// handler for any binding. This is particularly useful for bindings that work\n// the same way, but just set a different named value, such as for element\n// attributes or CSS classes.\nvar namespacedBindingMatch = /([^\\.]+)\\.(.+)/, namespaceDivider = '.';\naddBindingHandlerCreator(namespacedBindingMatch, function (match, bindingKey) {\n    var namespace = match[1],\n        namespaceHandler = ko.bindingHandlers[namespace];\n    if (namespaceHandler) {\n        var bindingName = match[2],\n            handlerFn = namespaceHandler.getNamespacedHandler || defaultGetNamespacedHandler,\n            handler = handlerFn.call(namespaceHandler, bindingName, namespace, bindingKey);\n        ko.bindingHandlers[bindingKey] = handler;\n        return handler;\n    }\n});\n\n// Knockout's built-in bindings \"attr\", \"event\", \"css\" and \"style\" include the idea of\n// namespaces, representing it using a single binding that takes an object map of names\n// to values. This default handler translates a binding of \"namespacedName: value\"\n// to \"namespace: {name: value}\" to automatically support those built-in bindings.\nfunction defaultGetNamespacedHandler(name, namespace, namespacedName) {\n    var handler = ko.utils.extend({}, this);\n    function setHandlerFunction(funcName) {\n        if (handler[funcName]) {\n            handler[funcName] = function(element, valueAccessor) {\n                function subValueAccessor() {\n                    var result = {};\n                    result[name] = valueAccessor();\n                    return result;\n                }\n                var args = Array.prototype.slice.call(arguments, 0);\n                args[1] = subValueAccessor;\n                return ko.bindingHandlers[namespace][funcName].apply(this, args);\n            };\n        }\n    }\n    // Set new init and update functions that wrap the originals\n    setHandlerFunction('init');\n    setHandlerFunction('update');\n    // Clear any preprocess function since preprocessing of the new binding would need to be different\n    if (handler.preprocess)\n        handler.preprocess = null;\n    if (ko.virtualElements.allowedBindings[namespace])\n        ko.virtualElements.allowedBindings[namespacedName] = true;\n    return handler;\n}\n\n// Adds a preprocess function for every generated namespace.x binding. This can\n// be called multiple times for the same binding, and the preprocess functions will\n// be chained. If the binding has a custom getNamespacedHandler method, make sure that\n// it's set before this function is used.\nfunction addDefaultNamespacedBindingPreprocessor(namespace, preprocessFn) {\n    var handler = ko.getBindingHandler(namespace);\n    if (handler) {\n        var previousHandlerFn = handler.getNamespacedHandler || defaultGetNamespacedHandler;\n        handler.getNamespacedHandler = function() {\n            return addBindingPreprocessor(previousHandlerFn.apply(this, arguments), preprocessFn);\n        };\n    }\n}\n\nfunction autoNamespacedPreprocessor(value, binding, addBinding) {\n    if (value.charAt(0) !== \"{\")\n        return value;\n\n    // Handle two-level binding specified as \"binding: {key: value}\" by parsing inner\n    // object and converting to \"binding.key: value\"\n    var subBindings = ko.expressionRewriting.parseObjectLiteral(value);\n    ko.utils.arrayForEach(subBindings, function(keyValue) {\n        addBinding(binding + namespaceDivider + keyValue.key, keyValue.value);\n    });\n}\n\n// Set the namespaced preprocessor for a specific binding\nfunction enableAutoNamespacedSyntax(bindingKeyOrHandler) {\n    addBindingPreprocessor(bindingKeyOrHandler, autoNamespacedPreprocessor);\n}\n\n// Export the preprocessor functions\nko_punches.namespacedBinding = {\n    defaultGetHandler: defaultGetNamespacedHandler,\n    setDefaultBindingPreprocessor: addDefaultNamespacedBindingPreprocessor,    // for backwards compat.\n    addDefaultBindingPreprocessor: addDefaultNamespacedBindingPreprocessor,\n    preprocessor: autoNamespacedPreprocessor,\n    enableForBinding: enableAutoNamespacedSyntax\n};\n// Wrap a callback function in an anonymous function so that it is called with the appropriate\n// \"this\" value.\nfunction wrappedCallbackPreprocessor(val) {\n    // Matches either an isolated identifier or something ending with a property accessor\n    if (/^([$_a-z][$\\w]*|.+(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i.test(val)) {\n        return 'function(_x,_y,_z){return(' + val + ')(_x,_y,_z);}';\n    } else {\n        return val;\n    }\n}\n\n// Set the wrappedCallback preprocessor for a specific binding\nfunction enableWrappedCallback(bindingKeyOrHandler) {\n    addBindingPreprocessor(bindingKeyOrHandler, wrappedCallbackPreprocessor);\n}\n\n// Export the preprocessor functions\nko_punches.wrappedCallback = {\n    preprocessor: wrappedCallbackPreprocessor,\n    enableForBinding: enableWrappedCallback\n};\n// Attach a preprocess function to a specific property of a binding. This allows you to\n// preprocess binding \"options\" using the same preprocess functions that work for bindings.\nfunction addBindingPropertyPreprocessor(bindingKeyOrHandler, property, preprocessFn) {\n    var handler = getOrCreateHandler(bindingKeyOrHandler);\n    if (!handler._propertyPreprocessors) {\n        // Initialize the binding preprocessor\n        chainPreprocessor(handler, 'preprocess', propertyPreprocessor);\n        handler._propertyPreprocessors = {};\n    }\n    // Add the property preprocess function\n    chainPreprocessor(handler._propertyPreprocessors, property, preprocessFn);\n}\n\n// In order to preprocess a binding property, we have to preprocess the binding itself.\n// This preprocess function splits up the binding value and runs each property's preprocess\n// function if it's set.\nfunction propertyPreprocessor(value, binding, addBinding) {\n    if (value.charAt(0) !== \"{\")\n        return value;\n\n    var subBindings = ko.expressionRewriting.parseObjectLiteral(value),\n        resultStrings = [],\n        propertyPreprocessors = this._propertyPreprocessors || {};\n    ko.utils.arrayForEach(subBindings, function(keyValue) {\n        var prop = keyValue.key, propVal = keyValue.value;\n        if (propertyPreprocessors[prop]) {\n            propVal = propertyPreprocessors[prop](propVal, prop, addBinding);\n        }\n        if (propVal) {\n            resultStrings.push(\"'\" + prop + \"':\" + propVal);\n        }\n    });\n    return \"{\" + resultStrings.join(\",\") + \"}\";\n}\n\n// Export the preprocessor functions\nko_punches.preprocessBindingProperty = {\n    setPreprocessor: addBindingPropertyPreprocessor,     // for backwards compat.\n    addPreprocessor: addBindingPropertyPreprocessor\n};\n// Wrap an expression in an anonymous function so that it is called when the event happens\nfunction makeExpressionCallbackPreprocessor(args) {\n    return function expressionCallbackPreprocessor(val) {\n        return 'function('+args+'){return(' + val + ');}';\n    };\n}\n\nvar eventExpressionPreprocessor = makeExpressionCallbackPreprocessor(\"$data,$event\");\n\n// Set the expressionCallback preprocessor for a specific binding\nfunction enableExpressionCallback(bindingKeyOrHandler, args) {\n    var args = Array.prototype.slice.call(arguments, 1).join();\n    addBindingPreprocessor(bindingKeyOrHandler, makeExpressionCallbackPreprocessor(args));\n}\n\n// Export the preprocessor functions\nko_punches.expressionCallback = {\n    makePreprocessor: makeExpressionCallbackPreprocessor,\n    eventPreprocessor: eventExpressionPreprocessor,\n    enableForBinding: enableExpressionCallback\n};\n\n// Create an \"on\" namespace for events to use the expression method\nko.bindingHandlers.on = {\n    getNamespacedHandler: function(eventName) {\n        var handler = ko.getBindingHandler('event' + namespaceDivider + eventName);\n        return addBindingPreprocessor(handler, eventExpressionPreprocessor);\n    }\n};\n// Performance comparison at http://jsperf.com/markup-interpolation-comparison\nfunction parseInterpolationMarkup(textToParse, outerTextCallback, expressionCallback) {\n    function innerParse(text) {\n        var innerMatch = text.match(/^([\\s\\S]*)}}([\\s\\S]*?)\\{\\{([\\s\\S]*)$/);\n        if (innerMatch) {\n            innerParse(innerMatch[1]);\n            outerTextCallback(innerMatch[2]);\n            expressionCallback(innerMatch[3]);\n        } else {\n            expressionCallback(text);\n        }\n    }\n    var outerMatch = textToParse.match(/^([\\s\\S]*?)\\{\\{([\\s\\S]*)}}([\\s\\S]*)$/);\n    if (outerMatch) {\n        outerTextCallback(outerMatch[1]);\n        innerParse(outerMatch[2]);\n        outerTextCallback(outerMatch[3]);\n    }\n}\n\nfunction trim(string) {\n    return string == null ? '' :\n        string.trim ?\n            string.trim() :\n            string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\n}\n\nfunction interpolationMarkupPreprocessor(node) {\n    // only needs to work with text nodes\n    if (node.nodeType === 3 && node.nodeValue && node.nodeValue.indexOf('{{') !== -1 && (node.parentNode || {}).nodeName != \"TEXTAREA\") {\n        var nodes = [];\n        function addTextNode(text) {\n            if (text)\n                nodes.push(document.createTextNode(text));\n        }\n        function wrapExpr(expressionText) {\n            if (expressionText)\n                nodes.push.apply(nodes, ko_punches_interpolationMarkup.wrapExpression(expressionText, node));\n        }\n        parseInterpolationMarkup(node.nodeValue, addTextNode, wrapExpr)\n\n        if (nodes.length) {\n            if (node.parentNode) {\n                for (var i = 0, n = nodes.length, parent = node.parentNode; i < n; ++i) {\n                    parent.insertBefore(nodes[i], node);\n                }\n                parent.removeChild(node);\n            }\n            return nodes;\n        }\n    }\n}\n\nif (!ko.virtualElements.allowedBindings.html) {\n    // Virtual html binding\n    // SO Question: http://stackoverflow.com/a/15348139\n    var overridden = ko.bindingHandlers.html.update;\n    ko.bindingHandlers.html.update = function (element, valueAccessor) {\n        if (element.nodeType === 8) {\n            var html = ko_unwrap(valueAccessor());\n            if (html != null) {\n                var parsedNodes = ko.utils.parseHtmlFragment('' + html);\n                ko.virtualElements.setDomNodeChildren(element, parsedNodes);\n            } else {\n                ko.virtualElements.emptyNode(element);\n            }\n        } else {\n            overridden(element, valueAccessor);\n        }\n    };\n    ko.virtualElements.allowedBindings.html = true;\n}\n\nfunction wrapExpression(expressionText, node) {\n    var ownerDocument = node ? node.ownerDocument : document,\n        closeComment = true,\n        binding,\n        expressionText = trim(expressionText),\n        firstChar = expressionText[0],\n        lastChar = expressionText[expressionText.length - 1],\n        result = [],\n        matches;\n\n    if (firstChar === '#') {\n        if (lastChar === '/') {\n            binding = expressionText.slice(1, -1);\n        } else {\n            binding = expressionText.slice(1);\n            closeComment = false;\n        }\n        if (matches = binding.match(/^([^,\"'{}()\\/:[\\]\\s]+)\\s+([^\\s:].*)/)) {\n            binding = matches[1] + ':' + matches[2];\n        }\n    } else if (firstChar === '/') {\n        // replace only with a closing comment\n    } else if (firstChar === '{' && lastChar === '}') {\n        binding = \"html:\" + trim(expressionText.slice(1, -1));\n    } else {\n        binding = \"text:\" + trim(expressionText);\n    }\n\n    if (binding)\n        result.push(ownerDocument.createComment(\"ko \" + binding));\n    if (closeComment)\n        result.push(ownerDocument.createComment(\"/ko\"));\n    return result;\n};\n\nfunction enableInterpolationMarkup() {\n    addNodePreprocessor(interpolationMarkupPreprocessor);\n}\n\n// Export the preprocessor functions\nvar ko_punches_interpolationMarkup = ko_punches.interpolationMarkup = {\n    preprocessor: interpolationMarkupPreprocessor,\n    enable: enableInterpolationMarkup,\n    wrapExpression: wrapExpression\n};\n\n\nvar dataBind = 'data-bind';\nfunction attributeInterpolationMarkerPreprocessor(node) {\n    if (node.nodeType === 1 && node.attributes.length) {\n        var dataBindAttribute = node.getAttribute(dataBind);\n        for (var attrs = ko.utils.arrayPushAll([], node.attributes), n = attrs.length, i = 0; i < n; ++i) {\n            var attr = attrs[i];\n            if (attr.specified && attr.name != dataBind && attr.value.indexOf('{{') !== -1) {\n                var parts = [], attrValue = '';\n                function addText(text) {\n                    if (text)\n                        parts.push('\"' + text.replace(/\"/g, '\\\\\"') + '\"');\n                }\n                function addExpr(expressionText) {\n                    if (expressionText) {\n                        attrValue = expressionText;\n                        parts.push('ko.unwrap(' + expressionText + ')');\n                    }\n                }\n                parseInterpolationMarkup(attr.value, addText, addExpr);\n\n                if (parts.length > 1) {\n                    attrValue = '\"\"+' + parts.join('+');\n                }\n\n                if (attrValue) {\n                    var attrName = attr.name.toLowerCase();\n                    var attrBinding = ko_punches_attributeInterpolationMarkup.attributeBinding(attrName, attrValue, node) || attributeBinding(attrName, attrValue, node);\n                    if (!dataBindAttribute) {\n                        dataBindAttribute = attrBinding\n                    } else {\n                        dataBindAttribute += ',' + attrBinding;\n                    }\n                    node.setAttribute(dataBind, dataBindAttribute);\n                    // Using removeAttribute instead of removeAttributeNode because IE clears the\n                    // class if you use removeAttributeNode to remove the id.\n                    node.removeAttribute(attr.name);\n                }\n            }\n        }\n    }\n}\n\nfunction attributeBinding(name, value, node) {\n    if (ko.getBindingHandler(name)) {\n        return name + ':' + value;\n    } else {\n        return 'attr.' + name + ':' + value;\n    }\n}\n\nfunction enableAttributeInterpolationMarkup() {\n    addNodePreprocessor(attributeInterpolationMarkerPreprocessor);\n}\n\nvar ko_punches_attributeInterpolationMarkup = ko_punches.attributeInterpolationMarkup = {\n    preprocessor: attributeInterpolationMarkerPreprocessor,\n    enable: enableAttributeInterpolationMarkup,\n    attributeBinding: attributeBinding\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/knockout.punches/index.js\n ** module id = 152\n ** module chunks = 1 2 4 6 7 8 9 10 12 17 18 22 23 24 27 29 30 31 35 36 37 42 53\n **/","var SUPPORT_EMAIL = 'support@osf.io';\nvar SUPPORT_LINK = '<a href=\"mailto: ' + SUPPORT_EMAIL + '\">' + SUPPORT_EMAIL + '</a>';\n\nvar REFRESH_OR_SUPPORT = 'Please refresh the page and try again or contact ' + SUPPORT_LINK + ' if the problem persists.';\n\nmodule.exports = {\n    // TODO\n    makePublic: null,\n    makePrivate: null,\n    registrations: {\n        registrationFailed: 'Registration failed. If this problem persists, please contact ' + SUPPORT_EMAIL + '.',\n        invalidEmbargoTitle: 'Invalid embargo end date',\n        invalidEmbargoMessage: 'Please choose a date more than two days, but less than four years, from today.',\n        registerConfirm: 'Are you sure you want to register this project?',\n        registerSkipAddons: 'If you choose to continue with the registration at this time we will exclude the contents of any addons that are not copyable. These files will not appear in the final registration.'\n    },\n    Addons: {\n        dataverse: {\n            userSettingsError: 'Could not retrieve settings. Please refresh the page or ' +\n                'contact <a href=\"mailto: ' + SUPPORT_EMAIL + '\">' + SUPPORT_EMAIL + '</a> if the ' +\n                'problem persists.',\n            deauthError: 'Could not disconnect the Dataverse account at this time.',\n            authError: 'Sorry, but there was a problem connecting to that instance of Dataverse. It ' +\n                'is likely that the instance hasn\\'t been upgraded to Dataverse 4.0. If you ' +\n                'have any questions or believe this to be an error, please contact ' +\n                'support@osf.io.',\n            authInvalid: 'Your Dataverse API token is invalid.',\n            authSuccess: 'Your Dataverse account was linked.',\n            datasetDeaccessioned: 'This dataset has already been deaccessioned on the Dataverse ' +\n                'and cannot be connected to the OSF.',\n            forbiddenCharacters: 'This dataset cannot be connected due to forbidden characters ' +\n                'in one or more of the dataset\\'s file names. This issue has been forwarded to our ' +\n                'development team.',\n            setDatasetError: 'Could not connect to this dataset.',\n            widgetInvalid: 'The credentials associated with this Dataverse account ' +\n                'appear to be invalid.',\n            widgetError: 'There was a problem connecting to the Dataverse.'\n        },\n        dropbox: {\n            // Shown on clicking \"Delete Access Token\" for dropbox\n            confirmDeauth: 'Are you sure you want to disconnect the Dropbox account? ' +\n                'This will revoke access to Dropbox for all projects you have ' +\n                'associated with this account.',\n            deauthError: 'Could not disconnect Dropbox account at this time',\n        },\n        figshare: {\n            confirmDeauth: 'Are you sure you want to disconnect the figshare account? ' +\n                'This will revoke access to figshare for all projects you have ' +\n                'associated with this account.',\n        },\n        // TODO\n        github: {\n            confirmDeauth: 'Are you sure you want to disconnect the GitHub account? ' +\n                'This will revoke access to GitHub for all projects you have ' +\n                'associated with this account.',\n        },\n        s3: {\n            confirmDeauth: 'Are you sure you want to disconnect the S3 account? ' +\n                'This will revoke access to S3 for all projects you have ' +\n                'associated with this account.',\n        },\n        box: {\n            // Shown on clicking \"Delete Access Token\" for dropbox\n            confirmDeauth: 'Are you sure you want to disconnect the Box account? ' +\n                'This will revoke access to Box for all projects you have ' +\n                'associated with this account.',\n            deauthError: 'Could not disconnect the Box account at this time',\n        },\n        googledrive: {\n          // Shown on clicking \"Delete Access Token\" for googledrive\n            confirmDeauth: 'Are you sure you want to disconnect the Google Drive account? ' +\n                'This will revoke access to Google Drive for all projects you have ' +\n                'associated with this account.',\n            deauthError: 'Could not disconnect the Google Drive account at this time',\n        }\n    },\n    apiOauth2Application: {\n        discardUnchanged: 'Are you sure you want to discard your unsaved changes?',\n        deactivateConfirm: 'Are you sure you want to deactivate this application for all users and revoke all access tokens? This cannot be reversed.',\n        deactivateError: 'Could not deactivate application. Please wait a few minutes and try again, or contact ' + SUPPORT_LINK + ' if the problem persists.',\n        dataFetchError: 'Data not loaded. ' + REFRESH_OR_SUPPORT,\n        dataListFetchError: 'Could not load list of developer applications at this time. ' + REFRESH_OR_SUPPORT,\n        dataSendError: 'Error sending data to the server: check that all fields are valid, or contact ' + SUPPORT_LINK + ' if the problem persists.',\n        creationSuccess: 'Successfully registered new application',\n        dataUpdated: 'Application data updated'\n    }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../website/static/js/osfLanguage.js\n ** module id = 164\n ** module chunks = 2 7 8 10 13 21 23 33 34 39 43\n **/","/**\n* Module that controls the Dataverse user settings. Includes Knockout view-model\n* for syncing data.\n*/\n\nvar ko = require('knockout');\nrequire('knockout.punches');\nko.punches.enableAll();\nvar $ = require('jquery');\nvar Raven = require('raven-js');\nvar bootbox = require('bootbox');\nrequire('js/osfToggleHeight');\n\nvar language = require('js/osfLanguage').Addons.dataverse;\nvar osfHelpers = require('js/osfHelpers');\nvar addonSettings = require('js/addonSettings');\n\nvar ExternalAccount = addonSettings.ExternalAccount;\n\nvar $modal = $('#dataverseInputCredentials');\n\n\nfunction ViewModel(url) {\n    var self = this;\n    const otherString = 'Other (Please Specify)';\n\n    self.properName = 'Dataverse';\n    self.apiToken = ko.observable();\n    self.urls = ko.observable({});\n    self.hosts = ko.observableArray([]);\n    self.selectedHost = ko.observable();    // Host specified in select element\n    self.customHost = ko.observable();      // Host specified in input element\n    // Whether the initial data has been loaded\n    self.loaded = ko.observable(false);\n    self.accounts = ko.observableArray();\n\n    // Designated host, specified from select or input element\n    self.host = ko.pureComputed(function() {\n        return self.useCustomHost() ? self.customHost() : self.selectedHost();\n    });\n    // Hosts visible in select element. Includes presets and \"Other\" option\n    self.visibleHosts = ko.pureComputed(function() {\n        return self.hosts().concat([otherString]);\n    });\n    // Whether to use select element or input element for host designation\n    self.useCustomHost = ko.pureComputed(function() {\n        return self.selectedHost() === otherString;\n    });\n    self.showApiTokenInput = ko.pureComputed(function() {\n        return Boolean(self.selectedHost());\n    });\n    self.tokenUrl = ko.pureComputed(function() {\n       return self.host() ? 'https://' + self.host() + '/account/apitoken' : null;\n    });\n\n    // Flashed messages\n    self.message = ko.observable('');\n    self.messageClass = ko.observable('text-info');\n\n    /** Reset all fields from Dataverse host selection modal */\n    self.clearModal = function() {\n        self.message('');\n        self.messageClass('text-info');\n        self.apiToken(null);\n        self.selectedHost(null);\n        self.customHost(null);\n    };\n\n    self.updateAccounts = function() {\n        var url = self.urls().accounts;\n        var request = $.get(url);\n        request.done(function(data) {\n            self.accounts($.map(data.accounts, function(account) {\n                var externalAccount =  new ExternalAccount(account);\n                externalAccount.dataverseHost = account.host;\n                externalAccount.dataverseUrl = account.host_url;\n                return externalAccount;\n            }));\n            $('.addon-auth-table').osfToggleHeight({height: 140});\n        });\n        request.fail(function(xhr, status, error) {\n            Raven.captureMessage('Error while updating addon account', {\n                url: url,\n                status: status,\n                error: error\n            });\n        });\n        return request;\n    };\n\n    /** Send POST request to authorize Dataverse */\n    self.sendAuth = function() {\n        // Selection should not be empty\n        if( !self.selectedHost() ){\n            self.changeMessage(\"Please select a Dataverse repository.\", 'text-danger');\n            return;\n        }\n\n        var url = self.urls().create;\n        return osfHelpers.postJSON(\n            url,\n            ko.toJS({\n                host: self.host,\n                api_token: self.apiToken\n            })\n        ).done(function() {\n            self.clearModal();\n            $modal.modal('hide');\n            self.updateAccounts();\n\n        }).fail(function(xhr, textStatus, error) {\n            var errorMessage = (xhr.status === 401) ? language.authInvalid : language.authError;\n            self.changeMessage(errorMessage, 'text-danger');\n            Raven.captureMessage('Could not authenticate with Dataverse', {\n                url: url,\n                textStatus: textStatus,\n                error: error\n            });\n        });\n    };\n\n    self.askDisconnect = function(account) {\n        var self = this;\n        bootbox.confirm({\n            title: 'Disconnect Dataverse Account?',\n            message: '<p class=\"overflow\">' +\n                'Are you sure you want to disconnect the Dataverse account on <strong>' +\n                account.name + '</strong>? This will revoke access to Dataverse for all projects associated with this account.' +\n                '</p>',\n            callback: function (confirm) {\n                if (confirm) {\n                    self.disconnectAccount(account);\n                }\n            },\n            buttons:{\n                confirm:{\n                    label:'Disconnect',\n                    className:'btn-danger'\n                }\n            }\n        });\n    };\n\n    self.disconnectAccount = function(account) {\n        var self = this;\n        var url = '/api/v1/oauth/accounts/' + account.id + '/';\n        var request = $.ajax({\n            url: url,\n            type: 'DELETE'\n        });\n        request.done(function(data) {\n            self.updateAccounts();\n        });\n        request.fail(function(xhr, status, error) {\n            Raven.captureMessage('Error while removing addon authorization for ' + account.id, {\n                url: url,\n                status: status,\n                error: error\n            });\n        });\n        return request;\n    };\n\n    /** Change the flashed status message */\n    self.changeMessage = function(text, css, timeout) {\n        self.message(text);\n        var cssClass = css || 'text-info';\n        self.messageClass(cssClass);\n        if (timeout) {\n            // Reset message after timeout period\n            setTimeout(function() {\n                self.message('');\n                self.messageClass('text-info');\n            }, timeout);\n        }\n    };\n\n    // Update observables with data from the server\n    self.fetch = function() {\n        $.ajax({\n            url: url,\n            type: 'GET',\n            dataType: 'json'\n        }).done(function (response) {\n            var data = response.result;\n            self.urls(data.urls);\n            self.hosts(data.hosts);\n            self.loaded(true);\n            self.updateAccounts();\n        }).fail(function (xhr, textStatus, error) {\n            self.changeMessage(language.userSettingsError, 'text-danger');\n            Raven.captureMessage('Could not GET Dataverse settings', {\n                url: url,\n                textStatus: textStatus,\n                error: error\n            });\n        });\n    };\n\n    self.selectionChanged = function() {\n        self.changeMessage('','');\n    };\n\n}\n\nfunction DataverseUserConfig(selector, url) {\n    // Initialization code\n    var self = this;\n    self.selector = selector;\n    self.url = url;\n    // On success, instantiate and bind the ViewModel\n    self.viewModel = new ViewModel(url);\n    osfHelpers.applyBindings(self.viewModel, self.selector);\n}\n\nmodule.exports = {\n    DataverseViewModel: ViewModel,\n    DataverseUserConfig: DataverseUserConfig    // for backwards-compat\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../website/addons/dataverse/static/dataverseUserConfig.js\n ** module id = 194\n ** module chunks = 7\n **/","'use strict';\n\nvar $ = require('jquery');\nvar ko = require('knockout');\nvar bootbox = require('bootbox');\nvar Raven = require('raven-js');\nvar oop = require('js/oop');\n\nvar ConnectedProject = function(data) {\n    var self = this;\n    self.title = data.title;\n    self.id = data.id;\n    self.urls = data.urls;\n};\n\nvar ExternalAccount = oop.defclass({\n    constructor: function(data) {\n        var self = this;\n        self.name = data.display_name;\n        self.id = data.id;\n        self.profileUrl = data.profile_url;\n        self.providerName = data.provider_name;\n\n        self.connectedNodes = ko.observableArray();\n\n        ko.utils.arrayMap(data.nodes, function(item) {\n            self.connectedNodes.push(new ConnectedProject(item));\n        });\n    },\n    _deauthorizeNodeConfirm: function(node) {\n        var self = this;\n        var url = node.urls.deauthorize;\n        var request = $.ajax({\n                url: url,\n                type: 'DELETE'\n            })\n            .done(function(data) {\n                self.connectedNodes.remove(node);\n            })\n            .fail(function(xhr, status, error) {\n                Raven.captureMessage('Error deauthorizing node: ' + node.id, {\n                    url: url,\n                    status: status,\n                    error: error\n                });\n            });\n    },\n    deauthorizeNode: function(node) {\n        var self = this;\n        bootbox.confirm({\n            title: 'Remove addon?',\n            message: 'Are you sure you want to remove the ' + self.providerName + ' authorization from this project?',\n            callback: function(confirm) {\n                if (confirm) {\n                    self._deauthorizeNodeConfirm(node);\n                }\n            },\n            buttons:{\n                confirm:{\n                    label:'Remove',\n                    className:'btn-danger'\n                }\n            }\n        });\n    }\n});\n\nvar OAuthAddonSettingsViewModel = oop.defclass({\n    constructor: function(name, displayName) {\n        var self = this;\n        self.name = name;\n        self.properName = displayName;\n        self.accounts = ko.observableArray();\n        self.message = ko.observable('');\n        self.messageClass = ko.observable('');\n    },\n    setMessage: function(msg, cls) {\n        var self = this;\n        self.message(msg);\n        self.messageClass(cls || 'text-info');\n    },\n    connectAccount: function() {\n        var self = this;\n        window.oauthComplete = function() {\n            self.setMessage('');\n            var accountCount = self.accounts().length;\n            self.updateAccounts().done( function() {\n                (self.accounts().length > accountCount) ?\n                    self.setMessage('Add-on successfully authorized. To link this add-on to an OSF project, go to the settings page of the project, enable ' + self.properName + ', and choose content to connect.', 'text-success') :\n                    self.setMessage('Error while authorizing addon. Please log in to your ' + self.properName + ' account and grant access to the OSF to enable this addon.', 'text-failure');\n                });\n        };\n        window.open('/oauth/connect/' + self.name + '/');\n    },\n    askDisconnect: function(account) {\n        var self = this;\n        bootbox.confirm({\n            title: 'Disconnect Account?',\n            message: '<p class=\"overflow\">' +\n                'Are you sure you want to disconnect the ' + self.properName + ' account <strong>' +\n                account.name + '</strong>? This will revoke access to ' + self.properName + ' for all projects you have authorized.' +\n                '</p>',\n            callback: function(confirm) {\n                if (confirm) {\n                    self.disconnectAccount(account);\n                    self.setMessage('');\n                }\n            },\n            buttons:{\n                confirm:{\n                    label:'Delete',\n                    className:'btn-danger'\n                }\n            }\n        });\n    },\n    disconnectAccount: function(account) {\n        var self = this;\n        var url = '/api/v1/oauth/accounts/' + account.id + '/';\n        var request = $.ajax({\n            url: url,\n            type: 'DELETE'\n        });\n        request.done(function(data) {\n            self.updateAccounts();\n        });\n        request.fail(function(xhr, status, error) {\n            Raven.captureMessage('Error while removing addon authorization for ' + account.id, {\n                url: url,\n                status: status,\n                error: error\n            });\n        });\n        return request;\n    },\n    updateAccounts: function() {\n        var self = this;\n        var url = '/api/v1/settings/' + self.name + '/accounts/';\n        var request = $.get(url);\n        request.done(function(data) {\n            self.accounts($.map(data.accounts, function(account) {\n                return new ExternalAccount(account);\n            }));\n        });\n        request.fail(function(xhr, status, error) {\n            Raven.captureMessage('Error while updating addon account', {\n                url: url,\n                status: status,\n                error: error\n            });\n        });\n        return request;\n    }\n});\n\nmodule.exports = {\n    ConnectedProject: ConnectedProject,\n    ExternalAccount: ExternalAccount,\n    OAuthAddonSettingsViewModel: OAuthAddonSettingsViewModel\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../website/static/js/addonSettings.js\n ** module id = 196\n ** module chunks = 7 32\n **/"],"sourceRoot":""}