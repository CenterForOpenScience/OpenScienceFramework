{"version":3,"sources":["webpack:///../website/addons/github/static/node-cfg.js","webpack:///../website/addons/github/static/github-node-cfg.js","webpack:///../website/static/js/addonHelper.js"],"names":[],"mappings":";;;;;AAAA;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACNA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET,KAAK;;AAEL,CAAC;;AAED;;;;;;;;AChIA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iC;AACA,K;AACA;AACA,CAAC","file":"github/node-cfg.js","sourcesContent":["'use strict';\n\nvar $ = require('jquery');\nrequire('./github-node-cfg.js');\nvar AddonHelper = require('js/addonHelper');\n\n$(window.contextVars.githubSettingsSelector).on('submit', AddonHelper.onSubmitSettings);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../website/addons/github/static/node-cfg.js\n ** module id = 0\n ** module chunks = 20\n **/","'use strict';\n\nvar $ = require('jquery');\nvar bootbox = require('bootbox');\nvar $osf = require('js/osfHelpers');\n\nvar nodeApiUrl = window.contextVars.node.urls.api;\n\nvar GithubConfigHelper = (function() {\n\n    var updateHidden = function(val) {\n        var repoParts = val.split('/');\n        $('#githubUser').val($.trim(repoParts[0]));\n        $('#githubRepo').val($.trim(repoParts[1]));\n    };\n\n    var displayError = function(msg) {\n        $('#addonSettingsGithub').find('.addon-settings-message')\n            .text('Error: ' + msg)\n            .removeClass('text-success').addClass('text-danger')\n            .fadeOut(100).fadeIn();\n    };\n\n    var createRepo = function() {\n\n        var $elm = $('#addonSettingsGithub');\n        var $select = $elm.find('select');\n\n        bootbox.prompt({\n            title: 'Name your new repo',\n            placeholder: 'Repo name',\n            callback: function (repoName) {\n                // Return if cancelled\n                if (repoName === null) {\n                    return;\n                }\n\n                if (repoName === '') {\n                    displayError('Your repo must have a name');\n                    return;\n                }\n\n                $osf.postJSON(\n                    '/api/v1/github/repo/create/',\n                    {name: repoName}\n                ).done(function (response) {\n                        var repoName = response.user + ' / ' + response.repo;\n                        $select.append('<option value=\"' + repoName + '\">' + repoName + '</option>');\n                        $select.val(repoName);\n                        updateHidden(repoName);\n                    }).fail(function () {\n                        displayError('Could not create repository');\n                    });\n            },\n            buttons:{\n                confirm:{\n                    label: 'Save',\n                    className:'btn-success'\n                }\n            }\n        });\n    };\n\n    $(document).ready(function() {\n        $('#githubSelectRepo').on('change', function() {\n            var value = $(this).val();\n            if (value) {\n                updateHidden(value);\n            }\n        });\n\n        $('#githubCreateRepo').on('click', function() {\n            createRepo();\n        });\n\n        $('#githubImportToken').on('click', function() {\n            $osf.postJSON(\n                nodeApiUrl + 'github/user_auth/',\n                {}\n            ).done(function() {\n                    if($osf.isIE()){\n                        window.location.hash = \"#configureAddonsAnchor\";\n                    }\n                    window.location.reload();\n            }).fail(\n                $osf.handleJSONError\n            );\n        });\n\n        $('#githubCreateToken').on('click', function() {\n            window.location.href = nodeApiUrl + 'github/oauth/';\n        });\n\n        $('#githubRemoveToken').on('click', function() {\n            bootbox.confirm({\n                title: 'Disconnect GitHub Account?',\n                message: 'Are you sure you want to remove this GitHub account?',\n                callback: function(confirm) {\n                    if(confirm) {\n                        $.ajax({\n                        type: 'DELETE',\n                        url: nodeApiUrl + 'github/oauth/'\n                    }).done(function() {\n                        window.location.reload();\n                    }).fail(\n                        $osf.handleJSONError\n                    );\n                    }\n                },\n                buttons:{\n                    confirm:{\n                        label: 'Disconnect',\n                        className: 'btn-danger'\n                    }\n                }\n            });\n        });\n\n        $('#addonSettingsGithub .addon-settings-submit').on('click', function() {\n            if (!$('#githubRepo').val()) {\n                return false;\n            }\n        });\n\n    });\n\n})();\n\nmodule.exports = GithubConfigHelper;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../website/addons/github/static/github-node-cfg.js\n ** module id = 358\n ** module chunks = 20\n **/","// TODO: Deprecate me\nvar $ = require('jquery');\nvar $osf = require('./osfHelpers');\n\nvar AddonHelper = (function() {\n\n    /**\n     * Convert an HTML form to a JS object.\n     *\n     * @param {jQuery} form\n     * @return {Object} The parsed data\n     */\n    function formToObj(form) {\n        var rv = {};\n        $.each($(form).serializeArray(), function(_, value) {\n            rv[value.name] = value.value;\n        });\n        return rv;\n    }\n\n    /**\n     * Submit add-on settings.\n     */\n    function onSubmitSettings() {\n        var $this = $(this);\n        var addon = $this.attr('data-addon');\n        var owner = $this.find('span[data-owner]').attr('data-owner');\n        var msgElm = $this.find('.addon-settings-message');\n\n        var url = owner === 'user' ? '/api/v1/settings/' + addon + '/' : nodeApiUrl + addon + '/settings/';\n\n        $osf.postJSON(\n            url,\n            formToObj($this)\n        ).done(function() {\n            msgElm.text('Settings updated')\n                .removeClass('text-danger').addClass('text-success')\n                .fadeOut(100).fadeIn();\n        }).fail(function(response) {\n            var message = '';\n            response = JSON.parse(response.responseText);\n            if (response && response.message) {\n                message = response.message;\n            } else {\n                message = 'Settings not updated.';\n            }\n            msgElm.text(message)\n                .removeClass('text-success').addClass('text-danger')\n                .fadeOut(100).fadeIn();\n        });\n\n        return false;\n\n    }\n\n    // Expose public methods\n    exports = {\n        formToObj: formToObj,\n        onSubmitSettings: onSubmitSettings,\n    };\n\n    if (typeof module === 'object') {\n        module.exports = exports; \n    } \n    return exports;\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../website/static/js/addonHelper.js\n ** module id = 359\n ** module chunks = 20 42 43\n **/"],"sourceRoot":""}