{"version":3,"sources":["webpack:///../website/addons/github/static/files.js","webpack:///../website/addons/github/static/githubFangornConfig.js"],"names":[],"mappings":";;;;;AAAA;;;;;;;;ACAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yDAAyD,yBAAyB;AAClF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yDAAyD,uDAAuD;AAChH;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iDAAiD,gBAAgB,EAAE,EAAE;AACzG,oCAAoC,gDAAgD,qBAAqB,EAAE,GAAG;AAC9G;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,4CAA4C,iDAAiD,gBAAgB,EAAE,EAAE;AACjH,4CAA4C,gDAAgD,wCAAwC,EAAE,GAAG;AACzI;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA,4CAA4C,iDAAiD,gBAAgB,EAAE,EAAE;AACjH,4CAA4C,gDAAgD,wCAAwC,EAAE,GAAG;AACzI;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,iCAAiC;AACzG;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+BAA+B;AAC9D;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,2DAA2D,8BAA8B;AACzF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA,kCAAkC;AAClC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD,sBAAsB;AAC3E;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,8BAA8B,6BAA6B;AACnF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"github/files.js","sourcesContent":["require('./githubFangornConfig.js');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../website/addons/github/static/files.js\n ** module id = 0\n ** module chunks = 19\n **/","'use strict';\n/**\n * Github FileBrowser configuration module.\n */\n\nvar m = require('mithril');\nvar $ = require('jquery');\nvar URI = require('URIjs');\nvar Fangorn = require('js/fangorn');\nvar waterbutler = require('js/waterbutler');\nvar $osf = require('js/osfHelpers');\n\n// Cross browser key codes for the Command key\nvar commandKeys = [224, 17, 91, 93];\n\nfunction _uploadUrl(item, file) {\n    return waterbutler.buildTreeBeardUpload(item, file, {branch: item.data.branch});\n}\n\n// TODO: Refactor, repeating from core function too much\nfunction _removeEvent (event, items) {\n    var tb = this;\n    function cancelDelete() {\n        tb.modal.dismiss();\n    }\n\n    function runDelete (item) {\n        tb.select('.tb-modal-footer .text-danger').html('<i> Deleting...</i>').css('color', 'grey');;\n        // delete from server, if successful delete from view\n        $.ajax({\n            url: waterbutler.buildTreeBeardDelete(item, {branch: item.data.branch, sha: item.data.extra.fileSha}),\n            type : 'DELETE',\n            beforeSend: $osf.setXHRAuthorization\n        }).done(function (data) {\n                // delete view\n                tb.deleteNode(item.parentID, item.id);\n                Fangorn.Utils.dismissToolbar.call(tb);\n                tb.modal.dismiss();\n                tb.clearMultiselect();\n\n        }).fail(function (data) {\n                tb.modal.dismiss();\n                Fangorn.Utils.dismissToolbar.call(tb);\n                item.notify.update('Delete failed.', 'danger', undefined, 3000);\n                tb.clearMultiselect();\n        });\n    }\n\n    function runDeleteMultiple(items){\n        items.forEach(function(item){\n            runDelete(item);\n        });\n    }\n\n    // If there is only one item being deleted, don't complicate the issue:\n    if(items.length === 1) {\n        var parent = items[0].parent();\n        var mithrilContentSingle = m('div', [\n            m('h3.break-word', 'Delete \"' + items[0].data.name + '\"'),\n            m('p', 'This action is irreversible.'),\n            parent.children.length < 2 ? m('p', 'If a folder in Github has no children it will automatically be removed.') : ''\n        ]);\n        var mithrilButtonsSingle = m('div', [\n            m('span.tb-modal-btn', { 'class' : 'text-default', onclick : function() { cancelDelete(); } }, 'Cancel'),\n            m('span.tb-modal-btn', { 'class' : 'text-danger', onclick : function() { runDelete(items[0]); }  }, 'Delete')\n        ]);\n        // This is already being checked before this step but will keep this edit permission check\n        if(items[0].data.permissions.edit){\n            tb.modal.update(mithrilContentSingle, mithrilButtonsSingle);\n        }\n    } else {\n        // Check if all items can be deleted\n        var canDelete = true;\n        var deleteList = [];\n        var noDeleteList = [];\n        var mithrilContentMultiple;\n        var mithrilButtonsMultiple;\n        items.forEach(function(item, index, arr){\n            if(!item.data.permissions.edit){\n                canDelete = false;\n                noDeleteList.push(item);\n            } else {\n                deleteList.push(item);\n            }\n        });\n        // If all items can be deleted\n        if(canDelete){\n            mithrilContentMultiple = m('div', [\n                    m('h3.break-word', 'Delete multiple files?'),\n                    m('p', 'This action is irreversible.'),\n                    deleteList.map(function(item){\n                        return m('.fangorn-canDelete.text-success', item.data.name);\n                    })\n                ]);\n            mithrilButtonsMultiple =  m('div', [\n                    m('span.tb-modal-btn', { 'class' : 'text-default', onclick : function() { cancelDelete(); } }, 'Cancel'),\n                    m('span.tb-modal-btn', { 'class' : 'text-danger', onclick : function() { runDeleteMultiple.call(tb, deleteList); }  }, 'Delete All')\n                ]);\n        } else {\n            mithrilContentMultiple = m('div', [\n                    m('h3.break-word', 'Delete multiple files?'),\n                    m('p', 'Some of these files can\\'t be deleted but you can delete the ones highlighted with green. This action is irreversible.'),\n                    deleteList.map(function(n){\n                        return m('.fangorn-canDelete.text-success', n.data.name);\n                    }),\n                    noDeleteList.map(function(n){\n                        return m('.fangorn-noDelete.text-warning', n.data.name);\n                    })\n                ]);\n            mithrilButtonsMultiple =  m('div', [\n                    m('span.tb-modal-btn', { 'class' : 'text-default', onclick : function() { cancelDelete(); } }, 'Cancel'),\n                    m('span.tb-modal-btn', { 'class' : 'text-danger', onclick : function() { runDeleteMultiple.call(tb, deleteList); }  }, 'Delete Some')\n                ]);\n        }\n        tb.modal.update(mithrilContentMultiple, mithrilButtonsMultiple);\n    }\n\n    return true; // Let fangorn know this config option was used.\n}\n\n\n// Define Fangorn Button Actions\nvar _githubItemButtons = {\n    view: function (ctrl, args, children) {\n        var tb = args.treebeard;\n        var item = args.item;\n        var buttons = [];\n        function _downloadEvent(event, item, col) {\n            event.stopPropagation();\n            window.location = waterbutler.buildTreeBeardDownload(item, {fileSha: item.data.extra.fileSha});\n        }\n        // Download Zip File\n        if (item.kind === 'folder') {\n            var branchArray = [];\n            if (item.data.branches) {\n                item.data.branch = item.data.branch || item.data.defaultBranch;\n                for (var i = 0; i < item.data.branches.length; i++) {\n                    var selected = item.data.branches[i] === item.data.branch ? 'selected' : '';\n                    branchArray.push(m('option', {\n                        selected: selected,\n                        value: item.data.branches[i]\n                    }, item.data.branches[i]));\n                }\n            }\n            if (item.data.addonFullname) {\n                buttons.push(\n                    m.component(Fangorn.Components.dropdown, {\n                        'label': 'Branch: ',\n                        onchange: function (event) {\n                            changeBranch.call(tb, item, event.target.value);\n                        },\n                        icon: 'fa fa-external-link',\n                        className: 'text-info'\n                    }, branchArray)\n                );\n            }\n            if (tb.options.placement !== 'fileview') {\n                // If File and FileRead are not defined dropzone is not supported and neither is uploads\n                if (window.File && window.FileReader && item.data.permissions && item.data.permissions.edit) {\n                    buttons.push(\n                        m.component(Fangorn.Components.button, {\n                            onclick: function (event) {\n                                Fangorn.ButtonEvents._uploadEvent.call(tb, event, item);\n                            },\n                            icon: 'fa fa-upload',\n                            className: 'text-success'\n                        }, 'Upload'),\n                        m.component(Fangorn.Components.button, {\n                            onclick: function (event) {\n                                tb.toolbarMode(Fangorn.Components.toolbarModes.ADDFOLDER);\n                            },\n                            icon: 'fa fa-plus',\n                            className: 'text-success'\n                        }, 'Create Folder')\n                    );\n                }\n                if (item.data.addonFullname) {\n                    buttons.push(\n                        m.component(Fangorn.Components.button, {\n                            onclick: function (event) {\n                                window.location = item.data.urls.zip;\n                            },\n                            icon: 'fa fa-download',\n                            className: 'text-primary'\n                        }, 'Download'),\n                        m.component(Fangorn.Components.button, {\n                            onclick: function (event) {\n                                window.open(item.data.urls.repo, '_blank');\n                            },\n                            icon: 'fa fa-external-link',\n                            className: 'text-info'\n                        }, 'Open')\n                    );\n                }\n            }\n        } else if (item.kind === 'file' && tb.options.placement !== 'fileview') {\n            buttons.push(\n                m.component(Fangorn.Components.button, {\n                    onclick: function (event) {\n                        _downloadEvent.call(tb, event, item);\n                    },\n                    icon: 'fa fa-download',\n                    className: 'text-primary'\n                }, 'Download')\n            );\n            if (item.data.permissions && item.data.permissions.view) {\n                buttons.push(\n                    m.component(Fangorn.Components.button, {\n                        onclick: function(event) {\n                            gotoFile.call(tb, item);\n                        },\n                        icon: 'fa fa-file-o',\n                        className : 'text-info'\n                    }, 'View'));\n            }\n            if (item.data.permissions && item.data.permissions.edit) {\n                buttons.push(\n                    m.component(Fangorn.Components.button, {\n                        onclick: function (event) {\n                            _removeEvent.call(tb, event, [item]);\n                        },\n                        icon: 'fa fa-trash',\n                        className: 'text-danger'\n                    }, 'Delete')\n                );\n            }\n            if (item.data.permissions && item.data.permissions.view && !item.data.permissions.private) {\n                buttons.push(\n                    m('a.text-info.fangorn-toolbar-icon', {href: item.data.extra.webView}, [\n                        m('i.fa.fa-external-link'),\n                        m('span', 'View on GitHub')\n                    ])\n                );\n            }\n        }\n\n        if(item.data.provider && !item.data.isAddonRoot && item.data.permissions && item.data.permissions.edit && tb.options.placement !== 'fileview') {\n            buttons.push(\n                m.component(Fangorn.Components.button, {\n                    onclick: function() {\n                        tb.toolbarMode(Fangorn.Components.toolbarModes.RENAME);\n                    },\n                    tooltip: 'Change the name of the item',\n                    icon: 'fa fa-font',\n                    className : 'text-info'\n                }, 'Rename')\n            );\n        }\n\n        return m('span', buttons); // Tell fangorn this function is used.\n    }\n};\n\nfunction changeBranch(item, ref){\n    item.data.branch = ref;\n    this.updateFolder(null, item);\n}\n\nfunction _resolveLazyLoad(item) {\n    return waterbutler.buildTreeBeardMetadata(item, {ref: item.data.branch});\n}\n\nfunction _fangornLazyLoadOnLoad (tree, event) {\n    var tb = this;\n    tree.children.forEach(function(item) {\n        Fangorn.Utils.inheritFromParent(item, tree, ['branch']);\n    });\n    Fangorn.Utils.setCurrentFileID.call(tb, tree, window.contextVars.node.id, window.contextVars.file);\n    if(!event && tb.isMultiselected(tb.currentFileID)){\n        Fangorn.Utils.scrollToFile.call(tb, tb.currentFileID);\n    }\n}\n\nfunction gotoFile (item) {\n    var tb = this;\n    var fileurl = new URI(item.data.nodeUrl)\n        .segment('files')\n        .segment(item.data.provider)\n        .segment(item.data.path.substring(1))\n        .search({branch: item.data.branch})\n        .toString();\n    if(commandKeys.indexOf(tb.pressedKey) !== -1) {\n        window.open(fileurl, '_blank');\n    } else {\n        window.open(fileurl, '_self');\n    }\n}\nfunction _fangornGithubTitle(item, col)  {\n    var tb = this;\n    if (item.data.isAddonRoot && item.connected === false) { // as opposed to undefined, avoids unnecessary setting of this value\n        return Fangorn.Utils.connectCheckTemplate.call(this, item);\n    }\n    if (item.data.addonFullname) {\n        var branch = item.data.branch || item.data.defaultBranch;\n        return m('span',[\n            m('github-name', item.data.name + ' (' + branch + ')')\n        ]);\n    } else {\n        if (item.kind === 'file' && item.data.permissions.view) {\n            return m('span',[\n                m('github-name.fg-file-links', {\n                    onclick: function() {\n                        gotoFile.call(tb, item);\n                    }\n                }, item.data.name)]);\n        } else {\n            return m('span', item.data.name);\n        }\n    }\n}\n\n\nfunction _fangornColumns (item) {\n    var tb = this;\n    var selectClass = '';\n    var node = item.parent().parent();\n    var columns = [];\n    columns.push({\n        data : 'name',\n        folderIcons : true,\n        filter: true,\n        custom : _fangornGithubTitle\n    });\n\n    if(tb.options.placement === 'project-files') {\n        columns.push(\n        {\n            data  : 'downloads',\n            filter : false,\n            css : ''\n        });\n    }\n    return columns;\n}\n\nfunction _fangornFolderIcons(item){\n    if(item.data.iconUrl){\n        return m('img',{src:item.data.iconUrl, style:{width:'16px', height:'auto'}}, ' ');\n    }\n    return undefined;\n}\n\nfunction _fangornUploadComplete(item){\n    var index = this.returnIndex(item.id);\n}\n\nfunction _fangornUploadSuccess(file, item, response) {\n    if (response) {\n        response.branch = item.parent().data.branch;\n    }\n}\n\n// Register configuration\nFangorn.config.github = {\n    // Handle changing the branch select\n    uploadUrl: _uploadUrl,\n    lazyload: _resolveLazyLoad,\n    resolveRows: _fangornColumns,\n    folderIcon: _fangornFolderIcons,\n    onUploadComplete: _fangornUploadComplete,\n    lazyLoadOnLoad: _fangornLazyLoadOnLoad,\n    uploadSuccess: _fangornUploadSuccess,\n    itemButtons: _githubItemButtons,\n    removeEvent : _removeEvent\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../website/addons/github/static/githubFangornConfig.js\n ** module id = 357\n ** module chunks = 19\n **/"],"sourceRoot":""}